{"ast":null,"code":"import { HYDRATE } from \"next-redux-wrapper\";\nimport user from \"./user\";\nimport post from \"./post\";\nimport { combineReducers } from \"redux\"; // (이전 상태, 액션) => 다음 상태\n\nvar rootReducer = function rootReducer(state, action) {\n  switch (action.type) {\n    case HYDRATE:\n      return action.payload;\n\n    default:\n      {\n        var combineReducer = combineReducers({\n          user: user,\n          post: post\n        });\n        return combineReducer(state, action);\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","user","post","combineReducers","rootReducer","state","action","type","payload","combineReducer"],"sources":["D:/react-nodebird-master/react-nodebird-master/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\nimport user from \"./user\";\nimport post from \"./post\";\nimport { combineReducers } from \"redux\";\n\n// (이전 상태, 액션) => 다음 상태\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return action.payload;\n    default: {\n      const combineReducer = combineReducers({\n        user,\n        post,\n      });\n      return combineReducer(state, action);\n    }\n  }\n};\n\nexport default rootReducer;\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,QAAgC,OAAhC,C,CAEA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKP,OAAL;MACE,OAAOM,MAAM,CAACE,OAAd;;IACF;MAAS;QACP,IAAMC,cAAc,GAAGN,eAAe,CAAC;UACrCF,IAAI,EAAJA,IADqC;UAErCC,IAAI,EAAJA;QAFqC,CAAD,CAAtC;QAIA,OAAOO,cAAc,CAACJ,KAAD,EAAQC,MAAR,CAArB;MACD;EATH;AAWD,CAZD;;AAcA,eAAeF,WAAf"},"metadata":{},"sourceType":"module"}