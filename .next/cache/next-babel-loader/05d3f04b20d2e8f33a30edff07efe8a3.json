{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-nodebird-master\\\\react-nodebird-master\\\\front\\\\components\\\\PostCardContent.js\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { Button, Input } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\n\nfunction PostCardContent({\n  postData,\n  editMode,\n  onChangePost,\n  onCancelUpdate\n}) {\n  const {\n    updatePostLoading,\n    updatePostDone\n  } = useSelector(state => state.post);\n  const {\n    0: editText,\n    1: setEditText\n  } = useState(postData);\n  useEffect(() => {\n    if (updatePostDone) {\n      onCancelUpdate();\n    }\n  }, [updatePostDone]);\n  const onChangeText = useCallback(e => {\n    setEditText(e.target.value);\n  });\n  return (\n    /*#__PURE__*/\n    // 첫 번째 게시글 #해시태그 #해시태그\n    _jsxDEV(\"div\", {\n      children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextArea, {\n          value: editText,\n          onChange: onChangeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            loading: updatePostLoading,\n            onClick: onChangePost(editText),\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            onClick: onCancelUpdate,\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : postData.split(/(#[^\\s#]+)/g).map((v, i) => {\n        if (v.match(/(#[^\\s#]+)/)) {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            href: `/hashtag/${v.slice(1)}`,\n            as: `/hashtag/${v.slice(1)}`,\n            prefetch: false,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: v\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this);\n        }\n\n        return v;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  );\n}\n\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired,\n  editMode: PropTypes.bool,\n  onChangePost: PropTypes.func.isRequired,\n  onCancelUpdate: PropTypes.func.isRequired\n};\nPostCardContent.defaultProps = {\n  editMode: false\n};\nexport default PostCardContent;","map":{"version":3,"names":["React","useState","useCallback","useEffect","Link","Button","Input","PropTypes","useSelector","TextArea","PostCardContent","postData","editMode","onChangePost","onCancelUpdate","updatePostLoading","updatePostDone","state","post","editText","setEditText","onChangeText","e","target","value","split","map","v","i","match","slice","propTypes","string","isRequired","bool","func","defaultProps"],"sources":["D:/react-nodebird-master/react-nodebird-master/front/components/PostCardContent.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { Button, Input } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\n\nconst { TextArea } = Input;\nfunction PostCardContent({ postData, editMode, onChangePost, onCancelUpdate }) {\n  const { updatePostLoading, updatePostDone } = useSelector(\n    (state) => state.post\n  );\n  const [editText, setEditText] = useState(postData);\n\n  useEffect(() => {\n    if (updatePostDone) {\n      onCancelUpdate();\n    }\n  }, [updatePostDone]);\n\n  const onChangeText = useCallback((e) => {\n    setEditText(e.target.value);\n  });\n\n  return (\n    // 첫 번째 게시글 #해시태그 #해시태그\n    <div>\n      {editMode ? (\n        <>\n          <TextArea value={editText} onChange={onChangeText} />\n          <Button.Group>\n            <Button\n              loading={updatePostLoading}\n              onClick={onChangePost(editText)}\n            >\n              수정\n            </Button>\n            <Button type=\"danger\" onClick={onCancelUpdate}>\n              취소\n            </Button>\n          </Button.Group>\n        </>\n      ) : (\n        postData.split(/(#[^\\s#]+)/g).map((v, i) => {\n          if (v.match(/(#[^\\s#]+)/)) {\n            return (\n              <Link\n                href={`/hashtag/${v.slice(1)}`}\n                as={`/hashtag/${v.slice(1)}`}\n                prefetch={false}\n                key={i}\n              >\n                <a>{v}</a>\n              </Link>\n            );\n          }\n          return v;\n        })\n      )}\n    </div>\n  );\n}\n\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired,\n  editMode: PropTypes.bool,\n  onChangePost: PropTypes.func.isRequired,\n  onCancelUpdate: PropTypes.func.isRequired,\n};\n\nPostCardContent.defaultProps = {\n  editMode: false,\n};\n\nexport default PostCardContent;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,MAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAM;EAAEC;AAAF,IAAeH,KAArB;;AACA,SAASI,eAAT,CAAyB;EAAEC,QAAF;EAAYC,QAAZ;EAAsBC,YAAtB;EAAoCC;AAApC,CAAzB,EAA+E;EAC7E,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAwCR,WAAW,CACtDS,KAAD,IAAWA,KAAK,CAACC,IADsC,CAAzD;EAGA,MAAM;IAAA,GAACC,QAAD;IAAA,GAAWC;EAAX,IAA0BnB,QAAQ,CAACU,QAAD,CAAxC;EAEAR,SAAS,CAAC,MAAM;IACd,IAAIa,cAAJ,EAAoB;MAClBF,cAAc;IACf;EACF,CAJQ,EAIN,CAACE,cAAD,CAJM,CAAT;EAMA,MAAMK,YAAY,GAAGnB,WAAW,CAAEoB,CAAD,IAAO;IACtCF,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;EACD,CAF+B,CAAhC;EAIA;IAAA;IACE;IACA;MAAA,UACGZ,QAAQ,gBACP;QAAA,wBACE,QAAC,QAAD;UAAU,KAAK,EAAEO,QAAjB;UAA2B,QAAQ,EAAEE;QAArC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD,CAAQ,KAAR;UAAA,wBACE,QAAC,MAAD;YACE,OAAO,EAAEN,iBADX;YAEE,OAAO,EAAEF,YAAY,CAACM,QAAD,CAFvB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAOE,QAAC,MAAD;YAAQ,IAAI,EAAC,QAAb;YAAsB,OAAO,EAAEL,cAA/B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAPF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA,gBADO,GAgBPH,QAAQ,CAACc,KAAT,CAAe,aAAf,EAA8BC,GAA9B,CAAkC,CAACC,CAAD,EAAIC,CAAJ,KAAU;QAC1C,IAAID,CAAC,CAACE,KAAF,CAAQ,YAAR,CAAJ,EAA2B;UACzB,oBACE,QAAC,IAAD;YACE,IAAI,EAAG,YAAWF,CAAC,CAACG,KAAF,CAAQ,CAAR,CAAW,EAD/B;YAEE,EAAE,EAAG,YAAWH,CAAC,CAACG,KAAF,CAAQ,CAAR,CAAW,EAF7B;YAGE,QAAQ,EAAE,KAHZ;YAAA,uBAME;cAAA,UAAIH;YAAJ;cAAA;cAAA;cAAA;YAAA;UANF,GAIOC,CAJP;YAAA;YAAA;YAAA;UAAA,QADF;QAUD;;QACD,OAAOD,CAAP;MACD,CAdD;IAjBJ;MAAA;MAAA;MAAA;IAAA;EAFF;AAqCD;;AAEDjB,eAAe,CAACqB,SAAhB,GAA4B;EAC1BpB,QAAQ,EAAEJ,SAAS,CAACyB,MAAV,CAAiBC,UADD;EAE1BrB,QAAQ,EAAEL,SAAS,CAAC2B,IAFM;EAG1BrB,YAAY,EAAEN,SAAS,CAAC4B,IAAV,CAAeF,UAHH;EAI1BnB,cAAc,EAAEP,SAAS,CAAC4B,IAAV,CAAeF;AAJL,CAA5B;AAOAvB,eAAe,CAAC0B,YAAhB,GAA+B;EAC7BxB,QAAQ,EAAE;AADmB,CAA/B;AAIA,eAAeF,eAAf"},"metadata":{},"sourceType":"module"}