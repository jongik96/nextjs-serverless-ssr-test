{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const enhancer = false ? compose(applyMiddleware(sagaMiddleware)) : composeWithDevTools(applyMiddleware(sagaMiddleware, loggerMiddleware));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","enhancer","store","sagaTask","run","wrapper","debug"],"sources":["D:/react-nodebird-master/react-nodebird-master/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nconst loggerMiddleware =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    console.log(action);\n    return next(action);\n  };\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(sagaMiddleware))\n      : composeWithDevTools(applyMiddleware(sagaMiddleware, loggerMiddleware));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,gBAAgB,GACpB,CAAC;EAAEC,QAAF;EAAYC;AAAZ,CAAD,KACCC,IAAD,IACCC,MAAD,IAAY;EACVC,OAAO,CAACC,GAAR,CAAYF,MAAZ;EACA,OAAOD,IAAI,CAACC,MAAD,CAAX;AACD,CANH;;AAQA,MAAMG,cAAc,GAAG,MAAM;EAC3B,MAAMC,cAAc,GAAGX,oBAAoB,EAA3C;EACA,MAAMY,QAAQ,GACZ,QACId,OAAO,CAACF,eAAe,CAACe,cAAD,CAAhB,CADX,GAEIZ,mBAAmB,CAACH,eAAe,CAACe,cAAD,EAAiBR,gBAAjB,CAAhB,CAHzB;EAIA,MAAMU,KAAK,GAAGhB,WAAW,CAACI,OAAD,EAAUW,QAAV,CAAzB;EACAC,KAAK,CAACC,QAAN,GAAiBH,cAAc,CAACI,GAAf,CAAmBb,QAAnB,CAAjB;EACA,OAAOW,KAAP;AACD,CATD;;AAWA,MAAMG,OAAO,GAAGrB,aAAa,CAACe,cAAD,EAAiB;EAC5CO,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}