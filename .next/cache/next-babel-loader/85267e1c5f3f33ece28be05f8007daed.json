{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\react-nodebird-master\\\\react-nodebird-master\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from \"antd\";\nimport React, { useEffect, useCallback, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { backUrl } from \"../config/config\";\nimport useInput from \"../hooks/useInput\";\nimport { addPost, ADD_POST_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    if (!text || !text.trim()) {\n      return alert(\"게시글을 작성하세요.\");\n    }\n\n    var formData = new FormData();\n    imagePaths.forEach(function (p) {\n      formData.append(\"image\", p);\n    });\n    formData.append(\"content\", text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log(\"images\", e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uBB34\\uC2A8\\uC77C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": \"right\"\n        },\n        htmlType: \"submit\",\n        children: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: v.replace(/\\/thumb\\//, \"/original/\"),\n            style: {\n              width: \"200px\"\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onRemoveImage(i),\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostForm, \"uNSEbxyZ52Mayt0tr31J38502f4=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["Button","Form","Input","React","useEffect","useCallback","useRef","useDispatch","useSelector","backUrl","useInput","addPost","ADD_POST_REQUEST","REMOVE_IMAGE","UPLOAD_IMAGES_REQUEST","PostForm","state","post","imagePaths","addPostDone","dispatch","text","onChangeText","setText","onSubmit","trim","alert","formData","FormData","forEach","p","append","type","data","imageInput","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","onRemoveImage","index","margin","map","v","i","display","replace","width"],"sources":["D:/react-nodebird-master/react-nodebird-master/front/components/PostForm.js"],"sourcesContent":["import { Button, Form, Input } from \"antd\";\nimport React, { useEffect, useCallback, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { backUrl } from \"../config/config\";\nimport useInput from \"../hooks/useInput\";\nimport {\n  addPost,\n  ADD_POST_REQUEST,\n  REMOVE_IMAGE,\n  UPLOAD_IMAGES_REQUEST,\n} from \"../reducers/post\";\n\nconst PostForm = () => {\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n  const dispatch = useDispatch();\n\n  const [text, onChangeText, setText] = useInput(\"\");\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert(\"게시글을 작성하세요.\");\n    }\n    const formData = new FormData();\n    imagePaths.forEach((p) => {\n      formData.append(\"image\", p);\n    });\n    formData.append(\"content\", text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData,\n    });\n  }, [text, imagePaths]);\n\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onChangeImages = useCallback((e) => {\n    console.log(\"images\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  });\n\n  const onRemoveImage = useCallback((index) => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index,\n    });\n  });\n\n  return (\n    <Form\n      style={{ margin: \"10px 0 20px\" }}\n      encType=\"multipart/form-data\"\n      onFinish={onSubmit}\n    >\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"무슨일\"\n      />\n      <div>\n        <input\n          type=\"file\"\n          name=\"image\"\n          multiple\n          hidden\n          ref={imageInput}\n          onChange={onChangeImages}\n        />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\n          게시글 작성\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img\n              src={v.replace(/\\/thumb\\//, \"/original/\")}\n              style={{ width: \"200px\" }}\n              alt={v}\n            />\n            <div>\n              <Button onClick={onRemoveImage(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}