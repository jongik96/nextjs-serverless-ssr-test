{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\react-nodebird-master\\\\react-nodebird-master\\\\front\\\\components\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone,\n      addCommentLoading = _useSelector.addCommentLoading;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1],\n      setCommentText = _useInput2[2];\n\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: \"relative\",\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: \"absolute\",\n          right: 0,\n          bottom: -40,\n          zIndex: 1\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: addCommentLoading,\n        children: \"\\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CommentForm, \"y/9Mb+RjjfHSicg+b+mpai3mPGE=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useCallback","useEffect","Form","Input","Button","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","addCommentDone","addCommentLoading","dispatch","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"sources":["D:/react-nodebird-master/react-nodebird-master/front/components/CommentForm.js"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({ post }) => {\n  const id = useSelector((state) => state.user.me?.id);\n  const { addCommentDone, addCommentLoading } = useSelector(\n    (state) => state.post\n  );\n  const dispatch = useDispatch();\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, postId: post.id, userId: id },\n    });\n  }, [commentText, id]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\n        <Input.TextArea\n          value={commentText}\n          onChange={onChangeCommentText}\n          rows={4}\n        />\n        <Button\n          style={{ position: \"absolute\", right: 0, bottom: -40, zIndex: 1 }}\n          type=\"primary\"\n          htmlType=\"submit\"\n          loading={addCommentLoading}\n        >\n          작성\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;EAAA;;EAAA,IAAXC,IAAW,QAAXA,IAAW;EAChC,IAAMC,EAAE,GAAGJ,WAAW,CAAC,UAACK,KAAD;IAAA;;IAAA,yBAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;EAAA,CAAD,CAAtB;;EACA,mBAA8CJ,WAAW,CACvD,UAACK,KAAD;IAAA,OAAWA,KAAK,CAACF,IAAjB;EAAA,CADuD,CAAzD;EAAA,IAAQK,cAAR,gBAAQA,cAAR;EAAA,IAAwBC,iBAAxB,gBAAwBA,iBAAxB;;EAGA,IAAMC,QAAQ,GAAGX,WAAW,EAA5B;;EACA,gBAA2DF,QAAQ,CAAC,EAAD,CAAnE;EAAA;EAAA,IAAOc,WAAP;EAAA,IAAoBC,mBAApB;EAAA,IAAyCC,cAAzC;;EAEApB,SAAS,CAAC,YAAM;IACd,IAAIe,cAAJ,EAAoB;MAClBK,cAAc,CAAC,EAAD,CAAd;IACD;EACF,CAJQ,EAIN,CAACL,cAAD,CAJM,CAAT;EAMA,IAAMM,eAAe,GAAGtB,WAAW,CAAC,YAAM;IACxCuB,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACC,EAAjB,EAAqBO,WAArB;IACAD,QAAQ,CAAC;MACPO,IAAI,EAAEhB,mBADC;MAEPiB,IAAI,EAAE;QAAEC,OAAO,EAAER,WAAX;QAAwBS,MAAM,EAAEjB,IAAI,CAACC,EAArC;QAAyCiB,MAAM,EAAEjB;MAAjD;IAFC,CAAD,CAAR;EAID,CANkC,EAMhC,CAACO,WAAD,EAAcP,EAAd,CANgC,CAAnC;EAQA,oBACE,QAAC,IAAD;IAAM,QAAQ,EAAEU,eAAhB;IAAA,uBACE,QAAC,IAAD,CAAM,IAAN;MAAW,KAAK,EAAE;QAAEQ,QAAQ,EAAE,UAAZ;QAAwBC,MAAM,EAAE;MAAhC,CAAlB;MAAA,wBACE,QAAC,KAAD,CAAO,QAAP;QACE,KAAK,EAAEZ,WADT;QAEE,QAAQ,EAAEC,mBAFZ;QAGE,IAAI,EAAE;MAHR;QAAA;QAAA;QAAA;MAAA,SADF,eAME,QAAC,MAAD;QACE,KAAK,EAAE;UAAEU,QAAQ,EAAE,UAAZ;UAAwBE,KAAK,EAAE,CAA/B;UAAkCC,MAAM,EAAE,CAAC,EAA3C;UAA+CC,MAAM,EAAE;QAAvD,CADT;QAEE,IAAI,EAAC,SAFP;QAGE,QAAQ,EAAC,QAHX;QAIE,OAAO,EAAEjB,iBAJX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,SANF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,SADF;AAmBD,CAzCD;;GAAMP,W;UACOF,W,EACmCA,W,EAG7BD,W,EAC0CF,Q;;;KANvDK,W;AA2CNA,WAAW,CAACyB,SAAZ,GAAwB;EACtBxB,IAAI,EAAEL,SAAS,CAAC8B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAe3B,WAAf"},"metadata":{},"sourceType":"module"}